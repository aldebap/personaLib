name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  HOME_PATH: ${{ github.workspace }}
  SOURCE_PATH: .
  TEST_PATH: test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install Korn shell
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install ksh

      - name: Install Docker & Docker Compose
        shell: bash
        run: |
          sudo apt-get install \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          echo sudo apt-get install docker-compose

      - name: Install Newman
        shell: bash
        run: |
          npm install -g newman

      - name: Build
        shell: bash
        run: |
          cd ${HOME_PATH}
          ./build.sh dependencies compile

      - name: Unit Tests
        shell: bash
        run: |
          cd ${HOME_PATH}
          ./build.sh test

      - name: Build Docker Image
        shell: bash
        run: |
          cd ${HOME_PATH}
          ./build.sh package

      - name: Integration Tests
        shell: bash
        run: |
          cd ${HOME_PATH}
          echo ./build.sh verify
